// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//======================================
//    MODELS
//======================================

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  files    File[]
  folders  Folder[]
  sessions Session[]
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  parent     Folder?  @relation("Subfolders", fields: [parentId], references: [id])
  parentId   Int?
  subfolders Folder[] @relation("Subfolders")

  files     File[]
  shareLink ShareLink?
}

model File {
  id        Int      @id @default(autoincrement())
  name      String
  size      Int
  mimeType  String?
  url       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  folder   Folder? @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId Int?

  shareLink ShareLink?
}

model ShareLink {
  id        String   @id @default(uuid())
  file      File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  fileId    Int      @unique
  folder    Folder?  @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId  Int?     @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Session {
  id        String   @id @default(cuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?
}
